apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: order-db
  namespace: stox
  labels:
    app: order-db
spec:
  serviceName: "order-db"
  replicas: 1
  selector:
    matchLabels:
      app: order-db
  template:
    metadata:
      labels:
        app: order-db
    spec:
      serviceAccountName: order-service-account 
      securityContext:
        fsGroup: 999
      containers:
      - name: order-db
        image: order-db:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 999
          runAsGroup: 999
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: order-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: order-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: order-config
              key: POSTGRES_DB
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: order-db
        livenessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: order-db
        persistentVolumeClaim:
          claimName: order-db-pvc